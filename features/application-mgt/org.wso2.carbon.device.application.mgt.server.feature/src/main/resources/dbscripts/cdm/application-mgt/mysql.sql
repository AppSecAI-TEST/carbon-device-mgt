SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema WSO2DM_APPM_DB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `APPM_APPLICATION_PLATFORM`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `APPM_APPLICATION_PLATFORM` (
  `ID` INT NOT NULL,
  `NAME` VARCHAR(100) NOT NULL,
  `DESCRIPTION` TEXT NULL,
  `CODE` VARCHAR(100) NOT NULL,
  `ICON_NAME` VARCHAR(100) NULL,
  `PROPERTIES` LONGTEXT NOT NULL,
  `PUBLISHED` TINYINT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB
COMMENT = 'This table contains the data related to the application platform';


-- -----------------------------------------------------
-- Table `APPM_APPLICATION_CATEGORY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `APPM_APPLICATION_CATEGORY` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(100) NOT NULL,
  `DESCRIPTION` TEXT NULL,
  `TENANT_ID` INT NULL,
  `PUBLISHED` TINYINT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB
COMMENT = 'This table contains the data related to the application category';


-- -----------------------------------------------------
-- Table `APPM_APPLICATION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `APPM_APPLICATION` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `UUID` VARCHAR(100) NOT NULL,
  `NAME` VARCHAR(100) NOT NULL,
  `DESCRIPTION` TEXT NULL,
  `ICON_NAME` VARCHAR(100) NULL,
  `BANNER_NAME` VARCHAR(100) NULL,
  `VIDEO_NAME` VARCHAR(100) NULL,
  `SCREENSHOTS` TEXT NULL,
  `CREATED_AT` DATETIME NULL,
  `MODIFIED_AT` DATETIME NULL,
  `PUBLISHED` TINYINT NULL,
  `APPLICATION_CATEGORY_ID` INT NOT NULL,
  PRIMARY KEY (`ID`, `APPLICATION_CATEGORY_ID`),
  UNIQUE INDEX `UUID_UNIQUE` (`UUID` ASC),
  INDEX `FK_APPLICATION_APPLICATION_CATEGORY` (`APPLICATION_CATEGORY_ID` ASC),
  CONSTRAINT `FK_APPLICATION_APPLICATION_CATEGORY`
    FOREIGN KEY (`APPLICATION_CATEGORY_ID`)
    REFERENCES `APPM_APPLICATION_CATEGORY` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This table contains the data related to the applications';


-- -----------------------------------------------------
-- Table `APPM_APPLICATION_PROPERTY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `APPM_APPLICATION_PROPERTY` (
  `PROP_KEY` VARCHAR(255) NOT NULL,
  `PROP_VAL` TEXT NULL,
  `APPLICATION_ID` INT NOT NULL,
  PRIMARY KEY (`PROP_KEY`, `APPLICATION_ID`),
  INDEX `FK_APPLICATION_PROPERTY_APPLICATION` (`APPLICATION_ID` ASC),
  CONSTRAINT `FK_APPLICATION_PROPERTY_APPLICATION`
    FOREIGN KEY (`APPLICATION_ID`)
    REFERENCES `APPM_APPLICATION` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This table contains the data related to the properties that related to the application';


-- -----------------------------------------------------
-- Table `APPM_APPLICATION_RELEASE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `APPM_APPLICATION_RELEASE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `VERSION_ID` INT NOT NULL,
  `VERSION_NAME` VARCHAR(100) NOT NULL,
  `RESOURCE` TEXT NULL,
  `RELEASE_CHANNEL` VARCHAR(50) NULL,
  `RELEASE_DETAILS` TEXT NULL,
  `CREATED_AT` DATETIME NULL,
  `APPM_APPLICATION_ID` INT NOT NULL,
  `LIFECYCLE_STATE` VARCHAR(50) NULL,
  `LIECYCLE_STATE_MODIFIED_BY` VARCHAR(45) NULL,
  `LIFECYCLE_STATE_MODIFIED_AT` DATETIME NULL,
  PRIMARY KEY (`ID`, `APPM_APPLICATION_ID`),
  INDEX `FK_APPLICATION_VERSION_APPLICATION` (`APPM_APPLICATION_ID` ASC),
  CONSTRAINT `FK_APPLICATION_VERSION_APPLICATION`
    FOREIGN KEY (`APPM_APPLICATION_ID`)
    REFERENCES `APPM_APPLICATION` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This table contains the data related to the application releases';


-- -----------------------------------------------------
-- Table `APPM_RELEASE_PROPERTY`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `APPM_RELEASE_PROPERTY` (
  `PROP_KEY` VARCHAR(255) NOT NULL,
  `PROP_VALUE` TEXT NULL,
  `APPM_APPLICATION_RELEASE_ID` INT NOT NULL,
  PRIMARY KEY (`PROP_KEY`, `APPM_APPLICATION_RELEASE_ID`),
  INDEX `FK_RELEASE_PROPERTY_APPLICATION_RELEASE` (`APPM_APPLICATION_RELEASE_ID` ASC),
  CONSTRAINT `FK_RELEASE_PROPERTY_APPLICATION_RELEASE`
    FOREIGN KEY (`APPM_APPLICATION_RELEASE_ID`)
    REFERENCES `APPM_APPLICATION_RELEASE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This table contains the data related to the properties that related to the application release';


-- -----------------------------------------------------
-- Table `APPM_APPLICATION_SUBSCRIPTION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `APPM_APPLICATION_SUBSCRIPTION` (
  `APPLICATION_ID` INT NOT NULL,
  `SUBSCRIPTION_TYPE` VARCHAR(50) NOT NULL,
  `SUBSCRIPTION_VALUE` VARCHAR(255) NOT NULL,
  `CREATED_AT` DATETIME NULL,
  PRIMARY KEY (`APPLICATION_ID`, `SUBSCRIPTION_TYPE`, `SUBSCRIPTION_VALUE`),
  CONSTRAINT `FK_APPLICATION_INSTALLATION_APPLICATION`
    FOREIGN KEY (`APPLICATION_ID`)
    REFERENCES `APPM_APPLICATION` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This table contains the data related to the application subscriptions';


-- -----------------------------------------------------
-- Table `APPM_COMMENT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `APPM_COMMENT` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `APPM_APPLICATION_RELEASE_ID` INT NOT NULL,
  `COMMENT` TEXT NULL,
  `RATING` INT NULL,
  `PARENT_ID` INT NULL,
  `CREATED_AT` DATETIME NULL,
  `CREATED_BY` VARCHAR(45) NULL,
  `MODIFIED_AT` DATETIME NULL,
  `PUBLISHED` TINYINT NULL,
  PRIMARY KEY (`ID`, `APPM_APPLICATION_RELEASE_ID`),
  INDEX `FK_APPLICATION_COMMENTS_APPLICATION_RELEASE` (`APPM_APPLICATION_RELEASE_ID` ASC),
  CONSTRAINT `FK_APPLICATION_COMMENTS_APPLICATION_RELEASE`
    FOREIGN KEY (`APPM_APPLICATION_RELEASE_ID`)
    REFERENCES `APPM_APPLICATION_RELEASE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This table contains the data related to the application comments';


-- -----------------------------------------------------
-- Table `APPM_PLATFORM_APPLICATION_MAPPING`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `APPM_PLATFORM_APPLICATION_MAPPING` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `APPM_PLATFORM_ID` INT NOT NULL,
  `TENANT_ID` INT NULL,
  `APPM_APPLICATION_ID` INT NOT NULL,
  PRIMARY KEY (`ID`, `APPM_PLATFORM_ID`, `APPM_APPLICATION_ID`),
  INDEX `FK_PLATFROM_APPLICATION_MAPPING_PLATFORM` (`APPM_PLATFORM_ID` ASC),
  INDEX `FK_PLATFROM_APPLICATION_MAPPING_APPLICATION` (`APPM_APPLICATION_ID` ASC),
  CONSTRAINT `fk_APPM_PLATFORM_TENANT_MAPPING_APPM_SUPPORTED_PLATFORM1`
    FOREIGN KEY (`APPM_PLATFORM_ID`)
    REFERENCES `APPM_APPLICATION_PLATFORM` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_APPM_PLATFORM_TENANT_MAPPING_APPM_APPLICATION1`
    FOREIGN KEY (`APPM_APPLICATION_ID`)
    REFERENCES `APPM_APPLICATION` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This table contains the data related relationship between application platofrm and appication mappings';


-- -----------------------------------------------------
-- Table `APPM_PLATFORM_TAG`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `APPM_PLATFORM_TAG` (
  `name` VARCHAR(100) NOT NULL,
  `APPM_PLATFORM_ID` INT NOT NULL,
  PRIMARY KEY (`APPM_PLATFORM_ID`, `name`),
  INDEX `fk_PLATFORM_TAGS_PLATFORM` (`APPM_PLATFORM_ID` ASC),
  CONSTRAINT `fk_APPM_SUPPORTED_PLATFORM_TAGS_APPM_SUPPORTED_PLATFORM1`
    FOREIGN KEY (`APPM_PLATFORM_ID`)
    REFERENCES `APPM_APPLICATION_PLATFORM` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This table contains the data related to the app platform tags';


-- -----------------------------------------------------
-- Table `APPM_APPLICATION_TAG`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `APPM_APPLICATION_TAG` (
  `name` VARCHAR(45) NOT NULL,
  `APPM_APPLICATION_ID` INT NOT NULL,
  PRIMARY KEY (`APPM_APPLICATION_ID`, `name`),
  INDEX `FK_APPLICATION_TAG_APPLICATION` (`APPM_APPLICATION_ID` ASC),
  CONSTRAINT `fk_APPM_APPLICATION_TAG_APPM_APPLICATION1`
    FOREIGN KEY (`APPM_APPLICATION_ID`)
    REFERENCES `APPM_APPLICATION` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This table contains the data related to the application tags';